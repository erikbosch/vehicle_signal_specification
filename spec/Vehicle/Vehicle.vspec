#
# (C) 2018 Volvo Cars
# (C) 2016 Jaguar Land Rover
#
# All files and artifacts in this repository are licensed under the
# provisions of the license provided by the LICENSE file in this repository.
#


#
# Highlevel vehicle signals and attributes.
#

#
# VSS Versioning information
#

VersionVSS:
  type: branch
  description: Supported Version of VSS

VersionVSS.Major:
  datatype: uint32
  type: attribute
  default: 3
  description: Supported Version of VSS - Major version

VersionVSS.Minor:
  datatype: uint32
  type: attribute
  default: 0  
  description: Supported Version of VSS - Minor version

VersionVSS.Patch:
  datatype: uint32
  type: attribute
  default: 0
  description: Supported Version of VSS - Patch version

VersionVSS.Label:
  datatype: string
  type: attribute
  default: "develop"
  description: Label to further describe the version

#
# Vehicle identification attributes.
#

VehicleIdentification:
  type: branch
  description: Attributes that identify a vehicle

VehicleIdentification.VIN:
  datatype: string
  type: attribute
  description: 17-character Vehicle Identification Number (VIN) as defined by ISO 3779

VehicleIdentification.WMI:
  datatype: string
  type: attribute
  description: 3-character World Manufacturer Identification (WMI) as defined by ISO 3780

VehicleIdentification.Brand:
  datatype: string
  type: attribute
  description: Vehicle brand or manufacturer

VehicleIdentification.Model:
  datatype: string
  type: attribute
  description: Vehicle model

VehicleIdentification.Year:
  datatype: uint16
  type: attribute
  description: Model year of the vehicle


#
# Imports from schema.org/Car
#

VehicleIdentification.ACRISSCode:
  datatype: string
  type: attribute
  description: The ACRISS Car Classification Code is a code used by many car rental companies.

VehicleIdentification.bodyType:
  datatype: string
  type: attribute
  description: Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).

VehicleIdentification.dateVehicleFirstRegistered:
  datatype: string
  type: attribute
  description: The date of the first registration of the vehicle with the respective public authorities.

VehicleIdentification.meetsEmissionStandard:
  datatype: string
  type: attribute
  description: Indicates that the vehicle meets the respective emission standard.

VehicleIdentification.productionDate:
  datatype: string
  type: attribute
  description: The date of production of the item, e.g. vehicle.

VehicleIdentification.purchaseDate:
  datatype: string
  type: attribute
  description: The date the item e.g. vehicle was purchased by the current owner.

VehicleIdentification.vehicleModelDate:
  datatype: string
  type: attribute
  description: The release date of a vehicle model (often used to differentiate versions of the same make and model).

VehicleIdentification.vehicleConfiguration:
  datatype: string
  type: attribute
  description: A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.

VehicleIdentification.vehicleSeatingCapacity:
  datatype: uint16
  type: attribute
  description: The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.

VehicleIdentification.vehicleSpecialUsage:
  datatype: string
  type: attribute
  description: Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school.

VehicleIdentification.vehicleinteriorColor:
  datatype: string
  type: attribute
  description: The color or color combination of the interior of the vehicle.

VehicleIdentification.vehicleinteriorType:
  datatype: string
  type: attribute
  description: The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.).

VehicleIdentification.knownVehicleDamages:
  datatype: string
  type: attribute
  description: A textual description of known damages, both repaired and unrepaired.

#
# Vehicle signals
#

LowVoltageSystemState:
  datatype: string
  type: sensor
  enum: [
    "UNDEFINED", # State of low voltage system not known
    "LOCK",      # Low voltage system off, steering lock or equivalent engaged
    "OFF",       # Low voltage system off, steering lock or equivalent not engaged
    "ACC",       # Vehicle Accessories on/living
    "ON",        # Engine start enabled (e.g. ignition on, diesel pre-heating, electrical drive released)
    "START"      # Engine starter relay closed (not applicable for electrical vehicles)
    ]
  description: State of the supply voltage of the control units (usually 12V).

IgnitionOn:
  datatype: boolean
  type: sensor
  description: Indicates whether the vehicle ignition is on or off.
  deprecation: V2.2 replaced by LowVoltageSystemState

IgnitionOnTime:
  datatype: uint32
  type: sensor
  unit: s
  description: Accumulated ignition on time in seconds.

IgnitionOffTime:
  datatype: uint32
  type: sensor
  unit: s
  description: Accumulated ignition off time in seconds.

DriveTime:
  datatype: uint32
  type: sensor
  unit: s
  description: Accumulated drive time in seconds.

IdleTime:
  datatype: uint32
  type: sensor
  unit: s
  description: Accumulated idle time in seconds.

Speed:
  datatype: float
  type: sensor
  unit: km/h
  description: Vehicle speed

TravelledDistance:
  datatype: float
  type: sensor
  unit: km
  description: Odometer reading, total distance travelled during the lifetime of the vehicle.

TripMeterReading:
  datatype: float
  type: sensor
  unit: km
  description: Current trip meter reading

AmbientAirTemperature:
  datatype: float
  type: sensor
  unit: celsius
  description: Ambient air temperature outside the vehicle.


IsMoving:
  datatype: boolean
  type: sensor
  description: Indicates whether the vehicle is stationary or moving

AverageSpeed:
  datatype: float
  type: sensor
  unit: km/h
  description: Average speed for the current trip


#
# Spatial Acceleration
#
Acceleration:
  type: branch
  description: Spatial acceleration

Acceleration.Longitudinal:
  datatype: float
  type: sensor
  unit: m/s^2
  description: Vehicle acceleration in X (longitudinal acceleration).

Acceleration.Lateral:
  datatype: float
  type: sensor
  unit: m/s^2
  description: Vehicle acceleration in Y (lateral acceleration).

Acceleration.Vertical:
  datatype: float
  type: sensor
  unit: m/s^2
  description: Vehicle acceleration in Z (vertical acceleration).


#
# Spatial Rotation
#
AngularVelocity:
  type: branch
  description: Spatial rotation

AngularVelocity.Roll:
  datatype: int16
  type: sensor
  unit: degrees/s
  description: Vehicle rotation rate along X (longitudinal).

AngularVelocity.Pitch:
  datatype: int16
  type: sensor
  unit: degrees/s
  description: Vehicle rotation rate along Y (lateral).

AngularVelocity.Yaw:
  datatype: int16
  type: sensor
  unit: degrees/s
  description: Vehicle rotation rate along Z (vertical).

#
# Schema from schema.org
#

RoofLoad:
  datatype: int16
  type: attribute
  unit: kg
  description: The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.

accelerationTime:
  datatype: int16
  type: attribute
  unit: s
  description: The time needed to accelerate the vehicle from a given start velocity to a given target velocity.
  deprecation: V2.1 removed as ambiguous definition (start/stop-speed not defined)

cargoVolume:
  datatype: float
  type: attribute
  unit: l
  description: The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.
  min: 0

emissionsCO2:
  datatype: int16
  type: attribute
  description: The CO2 emissions.
  unit: g/km


#
# Vehicle Weight and Dimension attributes
#

CurrentOverallWeight:
  datatype: uint16
  type: sensor
  unit: kg
  description: Current overall Vehicle weight. Including passengers, cargo and other load inside the car.

CurbWeight:
  datatype: uint16
  type: attribute
  default: 0
  unit: kg
  description: Vehicle curb weight, including all liquids and full tank of fuel, but no cargo or passengers.

GrossWeight:
  datatype: uint16
  type: attribute
  default: 0
  unit: kg
  description: Curb weight of vehicle, including all liquids and full tank of fuel and full load of cargo and passengers.

MaxTowWeight:
  datatype: uint16
  type: attribute
  default: 0
  unit: kg
  description: Maximum weight of trailer.

MaxTowBallWeight:
  datatype: uint16
  type: attribute
  default: 0
  unit: kg
  description: Maximum vertical weight on the tow ball of a trailer.

Length:
  datatype: uint16
  type: attribute
  default: 0
  unit: mm
  description: Overall vehicle length.

Height:
  datatype: uint16
  type: attribute
  default: 0
  unit: mm
  description: Overall vehicle height.

Width:
  datatype: uint16
  type: attribute
  default: 0
  unit: mm
  description: Overall vehicle width.


#
# Trailer
#
Trailer:
  type: branch
  description: Trailer signals

Trailer.Connected:
  datatype: boolean
  type: sensor
  description: Signal indicating if trailer is connected or not.

#
# Location
#

CurrentLocation:
  type: branch
  description: The current latitude and longitude of the vehicle.

CurrentLocation.Timestamp:
  datatype: string
  type: sensor
  description: Timestamp for latest position, formatted according to ISO 8601 using UTC time zone.

CurrentLocation.Latitude:
  datatype: double
  type: sensor
  min: -90
  max: 90
  unit: degrees
  description: Current latitude of vehicle according to WGS 84.

CurrentLocation.Longitude:
  datatype: double
  type: sensor
  min: -180
  max: 180
  unit: degrees
  description: Current longitude of vehicle according to WGS 84.

CurrentLocation.Heading:
  datatype: double
  type: sensor
  min: 0
  max: 360
  unit: degrees
  description: Current magnetic compass heading.

CurrentLocation.Accuracy:
  datatype: double
  type: sensor
  unit: m
  description: Accuracy level of the latitude and longitude coordinates.

CurrentLocation.Altitude:
  datatype: double
  type: sensor
  unit: m
  description: Current altitude relative to WGS 84 reference ellipsoid.

